{"version":3,"sources":["webpack:///./src/components/PostListing.jsx","webpack:///./src/templates/category.jsx"],"names":["props","postList","postEdges","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","title","date","excerpt","timeToRead","map","post","to","key","category","pageContext","data","allMarkdownRemark","edges","className","config","siteTitle","pageQuery"],"mappings":"4FAAA,qCAGe,aAACA,GACf,IACOC,EAgBP,OACC,8BAjBMA,EAAW,GACjBD,EAAME,UAAUC,SAAQ,SAACC,GAExBH,EAASI,KAAK,CACbC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAEhCE,MAAOR,EAASG,KAAKI,YAAYC,MACjCC,KAAMT,EAASG,KAAKC,OAAOK,KAC3BC,QAASV,EAASG,KAAKO,QACvBC,WAAYX,EAASG,KAAKQ,gBAGrBd,GAOSe,KAAI,SAACC,GAAD,OACjB,kBAAC,OAAD,CAAMC,GAAID,EAAKX,KAAMa,IAAKF,EAAKL,OAC9B,4BAAKK,EAAKL,c,kCC3BhB,mIAOe,mBAACZ,GACT,IAAEoB,EAAapB,EAAMqB,YAAnBD,SACPlB,EAAYF,EAAMsB,KAAKC,kBAAkBC,MAE1C,OACC,kBAAC,IAAD,KACC,yBAAKC,UAAU,sBACd,kBAAC,IAAD,CAAQb,MAAK,sBAAwBQ,EAAxB,OAAuCM,IAAOC,YAC3D,kBAAC,IAAD,CAAazB,UAAWA,OAOrB,IAAM0B,EAAS","file":"component---src-templates-category-jsx-3773691c84513b829ab2.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nexport default (props) => {\n\tconst getPostList = () => {\n\t\tconst postList = [];\n\t\tprops.postEdges.forEach((postEdge) => {\n\t\t\t//TODO: we need to find what articles we need\n\t\t\tpostList.push({\n\t\t\t\tpath: postEdge.node.fields.slug,\n\t\t\t\ttags: postEdge.node.frontmatter.tags,\n\t\t\t\t// cover: postEdge.node.frontmatter.cover,\n\t\t\t\ttitle: postEdge.node.frontmatter.title,\n\t\t\t\tdate: postEdge.node.fields.date,\n\t\t\t\texcerpt: postEdge.node.excerpt,\n\t\t\t\ttimeToRead: postEdge.node.timeToRead\n\t\t\t});\n\t\t});\n\t\treturn postList;\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\t/* Your post list here. */\n\t\t\t\tgetPostList().map((post) => (\n\t\t\t\t\t<Link to={post.path} key={post.title}>\n\t\t\t\t\t\t<h1>{post.title}</h1>\n\t\t\t\t\t</Link>\n\t\t\t\t))\n\t\t\t}\n\t\t</div>\n\t);\n};\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport PostListing from '../components/PostListing';\nimport config from '../../data/SiteConfig';\n\nexport default (props) => {\n\tconst { category } = props.pageContext,\n\t\tpostEdges = props.data.allMarkdownRemark.edges;\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className=\"category-container\">\n\t\t\t\t<Helmet title={`Posts in category \"${category}\" | ${config.siteTitle}`} />\n\t\t\t\t<PostListing postEdges={postEdges} />\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n\tquery CategoryPage($category: String) {\n\t\tallMarkdownRemark(\n\t\t\tlimit: 1000\n\t\t\tsort: { fields: [fields___date], order: DESC }\n\t\t\tfilter: { frontmatter: { category: { eq: $category } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tslug\n\t\t\t\t\t\tdate\n\t\t\t\t\t}\n\t\t\t\t\texcerpt\n\t\t\t\t\ttimeToRead\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\ttags\n\t\t\t\t\t\t# cover\n\t\t\t\t\t\tdate\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"sourceRoot":""}